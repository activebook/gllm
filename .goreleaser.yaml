# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).

# ---- HOMEBREW INTEGRATION ----
brews:
  - name: gllm # Name of the formula file (gllm.rb)
    # Repository details for your Homebrew tap
    repository:
      owner: activebook # Your GitHub username/org
      name: homebrew-gllm # The name of your tap repo (e.g., homebrew-gllm)
      # Optional: Branch to push to (defaults to 'main' or 'master')
      # branch: main
      # Optional: Token to push to the tap repository
      # Set GITHUB_TOKEN environment variable for this. It needs repo scope.
      # token: "{{ .Env.GITHUB_TOKEN }}"

    # GoReleaser will automatically set homepage, url, sha256, and version.
    # You can override or add fields:
    description: "`gllm` is a powerful command-line tool designed to interact seamlessly with various Large Language Models (LLMs). Configure your API keys, set your preferred models, and start chatting or executing commands effortlessly."
    license: "Apache-2.0" # e.g., MIT

    # Optional: Add dependencies
    # dependencies:
    #   - name: "bash"
    #   - name: "zsh"
    #     type: "optional"

    # Optional: Specify installation steps if default isn't enough
    # (Usually not needed when GoReleaser handles binaries)
    # install: |
    #   bin.install "gllm"
    #   # Add commands to install other things like man pages, completions, etc.
    #   # man1.install "man/gllm.1"
    #   # bash_completion.install "completions/gllm.bash" => "gllm"

    # Optional: Add test block
    test: |
      system "#{bin}/gllm --version"

    # Commit message customization
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"

# Optional: Scoop integration (for Windows users)
# scoop:
#   bucket:
#     owner: your-github-username
#     name: scoop-bucket
#   commit_author:
#     name: goreleaserbot
#     email: bot@goreleaser.com
#   commit_msg_template: "Scoop update for {{ .ProjectName }} version {{ .Tag }}"
#   homepage: "https://github.com/your-username/gllm"
#   description: "Description of your CLI app gllm."
#   license: YOUR_LICENSE